<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="470" onload="init(evt)" viewBox="0 0 1200 470" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<defs >
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	.func_g:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
</style>
<script type="text/ecmascript">
<![CDATA[
	var details, searchbtn, matchedtxt, svg;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	// mouse-over for info
	function s(node) {		// show
		info = g_to_text(node);
		details.nodeValue = "Function: " + info;
	}
	function c() {			// clear
		details.nodeValue = ' ';
	}

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	})

	// functions
	function find_child(parent, name, attr) {
		var children = parent.childNodes;
		for (var i=0; i<children.length;i++) {
			if (children[i].tagName == name)
				return (attr != undefined) ? children[i].attributes[attr].value : children[i];
		}
		return;
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_"+attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_"+attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_"+attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		if (func != null)
			func = func.replace(/ .*/, "");
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes["width"].value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)/,"");
		t.attributes["x"].value = parseFloat(r.attributes["x"].value) +3;

		// Smaller than this size won't fit anything
		if (w < 2*10*0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x=txt.length-2; x>0; x--) {
			if (t.getSubStringLength(0, x+2) <= w) {
				t.textContent = txt.substring(0,x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for(var i=0, c=e.childNodes; i<c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes["x"] != undefined) {
				orig_save(e, "x");
				e.attributes["x"].value = (parseFloat(e.attributes["x"].value) - x - 10) * ratio + 10;
				if(e.tagName == "text") e.attributes["x"].value = find_child(e.parentNode, "rect", "x") + 3;
			}
			if (e.attributes["width"] != undefined) {
				orig_save(e, "width");
				e.attributes["width"].value = parseFloat(e.attributes["width"].value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for(var i=0, c=e.childNodes; i<c.length; i++) {
			zoom_child(c[i], x-10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes["x"] != undefined) {
				orig_save(e, "x");
				e.attributes["x"].value = 10;
			}
			if (e.attributes["width"] != undefined) {
				orig_save(e, "width");
				e.attributes["width"].value = parseInt(svg.width.baseVal.value) - (10*2);
			}
		}
		if (e.childNodes == undefined) return;
		for(var i=0, c=e.childNodes; i<c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr["width"].value);
		var xmin = parseFloat(attr["x"].value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr["y"].value);
		var ratio = (svg.width.baseVal.value - 2*10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		var unzoombtn = document.getElementById("unzoom");
		unzoombtn.style["opacity"] = "1.0";

		var el = document.getElementsByTagName("g");
		for(var i=0;i<el.length;i++){
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a["x"].value);
			var ew = parseFloat(a["width"].value);
			// Is it an ancestor
			if (0 == 0) {
				var upstack = parseFloat(a["y"].value) > ymin;
			} else {
				var upstack = parseFloat(a["y"].value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.style["opacity"] = "0.5";
					zoom_parent(e);
					e.onclick = function(e){unzoom(); zoom(this);};
					update_text(e);
				}
				// not in current path
				else
					e.style["display"] = "none";
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.style["display"] = "none";
				}
				else {
					zoom_child(e, xmin, ratio);
					e.onclick = function(e){zoom(this);};
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		var unzoombtn = document.getElementById("unzoom");
		unzoombtn.style["opacity"] = "0.0";

		var el = document.getElementsByTagName("g");
		for(i=0;i<el.length;i++) {
			el[i].style["display"] = "block";
			el[i].style["opacity"] = "1";
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.getElementsByTagName("rect");
		for (var i=0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.style["opacity"] = "0.1";
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.style["opacity"] = "0.0";
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementsByTagName("g");
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			if (e.attributes["class"].value != "func_g")
				continue;
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (rect == null) {
				// the rect might be wrapped in an anchor
				// if nameattr href is being used
				if (rect = find_child(e, "a")) {
				    rect = find_child(r, "rect");
				}
			}
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes["width"].value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes["x"].value);
				orig_save(rect, "fill");
				rect.attributes["fill"].value =
				    "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.style["opacity"] = "1.0";
		searchbtn.firstChild.nodeValue = "Reset Search"

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
				return a - b;
			if (a < b || a > b)
				return a - b;
			return matches[b] - matches[a];
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.style["opacity"] = "1.0";
		pct = 100 * count / maxwidth;
		if (pct == 100)
			pct = "100"
		else
			pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
	function searchover(e) {
		searchbtn.style["opacity"] = "1.0";
	}
	function searchout(e) {
		if (searching) {
			searchbtn.style["opacity"] = "1.0";
		} else {
			searchbtn.style["opacity"] = "0.1";
		}
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="470.0" fill="url(#background)"  />
<text text-anchor="middle" x="600.00" y="10" font-size="15" font-family="Verdana" fill="rgb(0,0,0)"  >growth(red)_reductions(blue)</text>
<text text-anchor="" x="10.00" y="455" font-size="10" font-family="Verdana" fill="rgb(0,0,0)" id="details" > </text>
<text text-anchor="" x="10.00" y="20" font-size="10" font-family="Verdana" fill="rgb(0,0,0)" id="unzoom" onclick="unzoom()" style="opacity:0.0;cursor:pointer" >Reset Zoom</text>
<text text-anchor="" x="1090.00" y="20" font-size="10" font-family="Verdana" fill="rgb(0,0,0)" id="search" onmouseover="searchover()" onmouseout="searchout()" onclick="search_prompt()" style="opacity:0.1;cursor:pointer" >Search</text>
<text text-anchor="" x="1090.00" y="455" font-size="10" font-family="Verdana" fill="rgb(0,0,0)" id="matched" > </text>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java_start (41 samples, 100.00%; 0.00%)</title><rect x="10.0" y="377" width="1180.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="387.5" font-size="10" font-family="Verdana" fill="rgb(0,0,0)"  >java_start</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[unknown] (22 samples, 53.66%; -2.44%)</title><rect x="240.2" y="153" width="633.2" height="15.0" fill="rgb(175,175,255)" rx="2" ry="2" />
<text text-anchor="" x="243.24" y="163.5" font-size="10" font-family="Verdana" fill="rgb(0,0,0)"  >[unknown]</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>JavaCalls::call_virtual (37 samples, 90.24%; 0.00%)</title><rect x="10.0" y="313" width="1064.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="323.5" font-size="10" font-family="Verdana" fill="rgb(0,0,0)"  >JavaCalls::call_virtual</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>JavaCalls::call_virtual (37 samples, 90.24%; 0.00%)</title><rect x="10.0" y="297" width="1064.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="307.5" font-size="10" font-family="Verdana" fill="rgb(0,0,0)"  >JavaCalls::call_virtual</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>all (41 samples, 100%)</title><rect x="10.0" y="425" width="1180.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="435.5" font-size="10" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>os::sleep (7 samples, 17.07%; 0.00%)</title><rect x="873.4" y="169" width="201.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text text-anchor="" x="876.41" y="179.5" font-size="10" font-family="Verdana" fill="rgb(0,0,0)"  >os::sleep</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[unknown] (1 samples, 2.44%; +2.44%)</title><rect x="10.0" y="105" width="28.8" height="15.0" fill="rgb(255,175,175)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="115.5" font-size="10" font-family="Verdana" fill="rgb(0,0,0)"  >[u..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>call_stub (37 samples, 90.24%; 0.00%)</title><rect x="10.0" y="265" width="1064.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="275.5" font-size="10" font-family="Verdana" fill="rgb(0,0,0)"  >call_stub</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>pthread_cond_timedwait@@GLIBC_2.3.2 (3 samples, 7.32%; 0.00%)</title><rect x="988.5" y="153" width="86.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text text-anchor="" x="991.54" y="163.5" font-size="10" font-family="Verdana" fill="rgb(0,0,0)"  >pthread_cond..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>start_thread (41 samples, 100.00%; 0.00%)</title><rect x="10.0" y="393" width="1180.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="403.5" font-size="10" font-family="Verdana" fill="rgb(0,0,0)"  >start_thread</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>org/eclipse/jetty/io/nio/SelectorManager$SelectSet:::doSelect (1 samples, 2.44%; 0.00%)</title><rect x="10.0" y="185" width="28.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="195.5" font-size="10" font-family="Verdana" fill="rgb(0,0,0)"  >or..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Monitor::wait (1 samples, 2.44%; -2.44%)</title><rect x="1074.9" y="329" width="28.8" height="15.0" fill="rgb(175,175,255)" rx="2" ry="2" />
<text text-anchor="" x="1077.88" y="339.5" font-size="10" font-family="Verdana" fill="rgb(0,0,0)"  >Mo..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>futex_wait (3 samples, 7.32%; 0.00%)</title><rect x="988.5" y="89" width="86.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text text-anchor="" x="991.54" y="99.5" font-size="10" font-family="Verdana" fill="rgb(0,0,0)"  >futex_wait</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>system_call_fastpath (3 samples, 7.32%; 0.00%)</title><rect x="988.5" y="137" width="86.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text text-anchor="" x="991.54" y="147.5" font-size="10" font-family="Verdana" fill="rgb(0,0,0)"  >system_call_..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>schedule (3 samples, 7.32%; 0.00%)</title><rect x="988.5" y="57" width="86.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text text-anchor="" x="991.54" y="67.5" font-size="10" font-family="Verdana" fill="rgb(0,0,0)"  >schedule</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__clock_gettime (4 samples, 9.76%; 0.00%)</title><rect x="873.4" y="153" width="115.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text text-anchor="" x="876.41" y="163.5" font-size="10" font-family="Verdana" fill="rgb(0,0,0)"  >__clock_gettime</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>akka/actor/LightArrayRevolverScheduler$$anon$8:::nextTick (36 samples, 87.80%; 0.00%)</title><rect x="38.8" y="217" width="1036.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text text-anchor="" x="41.78" y="227.5" font-size="10" font-family="Verdana" fill="rgb(0,0,0)"  >akka/actor/LightArrayRevolverScheduler$$anon$8:::nextTick</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>JVM_Sleep (29 samples, 70.73%; 0.00%)</title><rect x="240.2" y="185" width="834.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text text-anchor="" x="243.24" y="195.5" font-size="10" font-family="Verdana" fill="rgb(0,0,0)"  >JVM_Sleep</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>sys_futex (3 samples, 7.32%; 0.00%)</title><rect x="988.5" y="121" width="86.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text text-anchor="" x="991.54" y="131.5" font-size="10" font-family="Verdana" fill="rgb(0,0,0)"  >sys_futex</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>futex_wait_queue_me (3 samples, 7.32%; 0.00%)</title><rect x="988.5" y="73" width="86.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text text-anchor="" x="991.54" y="83.5" font-size="10" font-family="Verdana" fill="rgb(0,0,0)"  >futex_wait_q..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>sun/nio/ch/EPollArrayWrapper:::poll (1 samples, 2.44%; 0.00%)</title><rect x="10.0" y="153" width="28.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="163.5" font-size="10" font-family="Verdana" fill="rgb(0,0,0)"  >su..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__clock_gettime (3 samples, 7.32%; 0.00%)</title><rect x="1103.7" y="329" width="86.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text text-anchor="" x="1106.66" y="339.5" font-size="10" font-family="Verdana" fill="rgb(0,0,0)"  >__clock_gett..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Interpreter (37 samples, 90.24%; 0.00%)</title><rect x="10.0" y="249" width="1064.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="259.5" font-size="10" font-family="Verdana" fill="rgb(0,0,0)"  >Interpreter</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[unknown] (4 samples, 9.76%; -2.44%)</title><rect x="873.4" y="137" width="115.1" height="15.0" fill="rgb(175,175,255)" rx="2" ry="2" />
<text text-anchor="" x="876.41" y="147.5" font-size="10" font-family="Verdana" fill="rgb(0,0,0)"  >[unknown]</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java/lang/Thread:::sleep (29 samples, 70.73%; 0.00%)</title><rect x="240.2" y="201" width="834.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text text-anchor="" x="243.24" y="211.5" font-size="10" font-family="Verdana" fill="rgb(0,0,0)"  >java/lang/Thread:::sleep</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[unknown] (7 samples, 17.07%; -14.63%)</title><rect x="38.8" y="185" width="201.4" height="15.0" fill="rgb(0,0,255)" rx="2" ry="2" />
<text text-anchor="" x="41.78" y="195.5" font-size="10" font-family="Verdana" fill="rgb(0,0,0)"  >[unknown]</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__schedule (3 samples, 7.32%; 0.00%)</title><rect x="988.5" y="41" width="86.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text text-anchor="" x="991.54" y="51.5" font-size="10" font-family="Verdana" fill="rgb(0,0,0)"  >__schedule</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>WatcherThread::sleep (4 samples, 9.76%; 0.00%)</title><rect x="1074.9" y="345" width="115.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text text-anchor="" x="1077.88" y="355.5" font-size="10" font-family="Verdana" fill="rgb(0,0,0)"  >WatcherThread::sl..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__clock_gettime (7 samples, 17.07%; 0.00%)</title><rect x="38.8" y="201" width="201.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text text-anchor="" x="41.78" y="211.5" font-size="10" font-family="Verdana" fill="rgb(0,0,0)"  >__clock_gettime</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Monitor::IWait (1 samples, 2.44%; 0.00%)</title><rect x="1074.9" y="313" width="28.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text text-anchor="" x="1077.88" y="323.5" font-size="10" font-family="Verdana" fill="rgb(0,0,0)"  >Mo..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>thread_entry (37 samples, 90.24%; 0.00%)</title><rect x="10.0" y="329" width="1064.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="339.5" font-size="10" font-family="Verdana" fill="rgb(0,0,0)"  >thread_entry</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Interpreter (37 samples, 90.24%; 0.00%)</title><rect x="10.0" y="233" width="1064.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="243.5" font-size="10" font-family="Verdana" fill="rgb(0,0,0)"  >Interpreter</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[unknown] (3 samples, 7.32%; 0.00%)</title><rect x="1103.7" y="313" width="86.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text text-anchor="" x="1106.66" y="323.5" font-size="10" font-family="Verdana" fill="rgb(0,0,0)"  >[unknown]</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[unknown] (1 samples, 2.44%; +2.44%)</title><rect x="1074.9" y="281" width="28.8" height="15.0" fill="rgb(255,175,175)" rx="2" ry="2" />
<text text-anchor="" x="1077.88" y="291.5" font-size="10" font-family="Verdana" fill="rgb(0,0,0)"  >[u..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__clock_gettime (22 samples, 53.66%; 0.00%)</title><rect x="240.2" y="169" width="633.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text text-anchor="" x="243.24" y="179.5" font-size="10" font-family="Verdana" fill="rgb(0,0,0)"  >__clock_gettime</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>JavaCalls::call_helper (37 samples, 90.24%; 0.00%)</title><rect x="10.0" y="281" width="1064.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="291.5" font-size="10" font-family="Verdana" fill="rgb(0,0,0)"  >JavaCalls::call_helper</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>JavaThread::thread_main_inner (37 samples, 90.24%; 0.00%)</title><rect x="10.0" y="345" width="1064.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="355.5" font-size="10" font-family="Verdana" fill="rgb(0,0,0)"  >JavaThread::thread_main_inner</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>finish_task_switch (3 samples, 7.32%; +7.32%)</title><rect x="988.5" y="25" width="86.4" height="15.0" fill="rgb(255,105,105)" rx="2" ry="2" />
<text text-anchor="" x="991.54" y="35.5" font-size="10" font-family="Verdana" fill="rgb(0,0,0)"  >finish_task_..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>JavaThread::run (37 samples, 90.24%; 0.00%)</title><rect x="10.0" y="361" width="1064.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="371.5" font-size="10" font-family="Verdana" fill="rgb(0,0,0)"  >JavaThread::run</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Interpreter (1 samples, 2.44%; 0.00%)</title><rect x="10.0" y="217" width="28.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="227.5" font-size="10" font-family="Verdana" fill="rgb(0,0,0)"  >In..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>sun/nio/ch/SelectorImpl:::select (1 samples, 2.44%; 0.00%)</title><rect x="10.0" y="169" width="28.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="179.5" font-size="10" font-family="Verdana" fill="rgb(0,0,0)"  >su..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>WatcherThread::run (4 samples, 9.76%; 0.00%)</title><rect x="1074.9" y="361" width="115.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text text-anchor="" x="1077.88" y="371.5" font-size="10" font-family="Verdana" fill="rgb(0,0,0)"  >WatcherThread::run</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Interpreter (1 samples, 2.44%; 0.00%)</title><rect x="10.0" y="201" width="28.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="211.5" font-size="10" font-family="Verdana" fill="rgb(0,0,0)"  >In..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Java_sun_nio_ch_EPollArrayWrapper_epollWait (1 samples, 2.44%; 0.00%)</title><rect x="10.0" y="121" width="28.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="131.5" font-size="10" font-family="Verdana" fill="rgb(0,0,0)"  >Ja..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>sun/nio/ch/EPollArrayWrapper:::epollWait (1 samples, 2.44%; 0.00%)</title><rect x="10.0" y="137" width="28.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="147.5" font-size="10" font-family="Verdana" fill="rgb(0,0,0)"  >su..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>do_futex (3 samples, 7.32%; 0.00%)</title><rect x="988.5" y="105" width="86.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text text-anchor="" x="991.54" y="115.5" font-size="10" font-family="Verdana" fill="rgb(0,0,0)"  >do_futex</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java (41 samples, 100.00%; 0.00%)</title><rect x="10.0" y="409" width="1180.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="419.5" font-size="10" font-family="Verdana" fill="rgb(0,0,0)"  >java</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__clock_gettime (1 samples, 2.44%; 0.00%)</title><rect x="1074.9" y="297" width="28.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text text-anchor="" x="1077.88" y="307.5" font-size="10" font-family="Verdana" fill="rgb(0,0,0)"  >__..</text>
</g>
</svg>
